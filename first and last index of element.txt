class Solution {
public:
    int findfirst(vector<int>& nums, int target){
        int lo=0;
        int hi=nums.size()-1;
        int fi=-1;
        while(lo<=hi){
            int mid=(lo+hi)/2;
            if(nums[mid]==target){
               fi=mid;
                hi=mid-1;
            }
               
            else if(nums[mid]<target)
                lo=mid+1;
            else
                hi=mid-1;
        }
        return fi;
    }
     int findlast(vector<int>& nums, int target){
        int lo=0;
        int hi=nums.size()-1;
         int li=-1;
        while(lo<=hi){
            int mid=(lo+hi)/2;
            if(nums[mid]==target ){
                li=mid;
                lo=mid+1;
            }
       
            else if(nums[mid]<target)
                lo=mid+1;
            else
                hi=mid-1;
        }
         return li;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>res;
        int n=nums.size();
        
        int fi=findfirst(nums,target);
        int si=findlast(nums,target);
        res.push_back(fi);
        res.push_back(si);
        return res;
    }
};